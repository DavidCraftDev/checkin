services:
  web:
    container_name: checkin
    image: ghcr.io/davidcraftdev/checkin:stable
    restart: always
    depends_on:
      - db
    environment:
      - TZ=Europe/Berlin
      # Enable Maintance Mode (true/false). When enabled, only a maintance page will be shown, the login is disabled.
      - MAINTANCE:false
      # Replace the following environment variables with your own values, you need to set the same values in the db service
      - POSTGRES_URL=postgres://postgres:postgres@db:5432/postgres
      # Replace the following environment variables with your own random secret
      - AUTH_SECRET=YOUR_SECRET
      # Set own default admin credentials
      - DEFAULT_LOGIN_USERNAME=OwnUsername
      - DEFAULT_LOGIN_PASSWORD=OwnPassword
      # Enable the study time feature (true/false). Once enabled, the feature should not be disabled.
      - STUDYTIME=false
      # The LDAP auth feature may not work with your envorinment. Please test it before using it in production, and when it not works, ask for help!
      # Use the LDAP auth feature instead of the own user management from the CheckIN (true/false). Please only enable before the first start of the CheckIN, and not disable it after the first start.
      - USE_LDAP=false
      # LDAP server URL starting with ldap:// or ldaps://
      - LDAP_URI=ldap://ldap.example.com
      # TLS Options for the LDAP connection, in JSON format, as example rejectUnauthorized or a custom CA certificate. For more information see https://nodejs.org/api/tls.html#tls_tls_connect_options_callback
      - TLS_OPTIONS={}
      # LDAP bind DN credentials
      - LDAP_BIND_DN=cn=admin,dc=example,dc=com
      - LDAP_BIND_PASSWORD=example
      # LDAP search base
      - LDAP_SEARCH_BASE=dc=example,dc=com
      # LDAP user search filter
      - LDAP_USER_SEARCH_FILTER=(cn=*)
      # Create local admin user if LDAP auth is enabled (true/false) The user will be created with the default admin credentials, the username will start with "local/". This only run once, when you change the login data, please save it.
      - LDAP_CREATE_LOCAL_ADMIN=true
      # Automaticlly set user permission from ldap groups (true/false)
      - LDAP_AUTO_PERMISSION=false
      - LDAP_AUTO_PERMISSION_TEACHER_GROUP=CN=Teacher,OU=Maingroups,OU=Groups,OU=Example-School,DC=example,DC=de
      - LDAP_AUTO_PERMISSION_ADMIN_GROUP=CN=Teacher,OU=Maingroups,OU=Groups,OU=Example-School,DC=example,DC=de
      # Experimental feature: Automatically detect users group from LDAP groups (true/false), set the OU where the groups are stored
      - LDAP_AUTO_GROUPS=false
      - LDAP_AUTO_GROUPS_OU=Classes
      # Experimental feature: Automatically detect users needed studyTimes from LDAP groups (true/false), set the OU where the courses like english, german or math are stored
      - LDAP_AUTO_STUDYTIME_DATA=false
      - LDAP_AUTO_STUDYTIME_DATA_OU=Courses
    ports:
      - "3030:3000"
  db:
    container_name: checkin-db
    image: postgres:16-alpine
    restart: always
    environment:
      - TZ=Europe/Berlin
      # Please replace the following environment variables with your own values, you need to set the same values in the checkin service
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - checkin_pgdata:/var/lib/postgresql/data

volumes:
  checkin_pgdata:
    name: checkin_pgdata
