generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_URL")
}

model Attendances {
  id         String   @default(cuid()) @id @unique
  userID     String      
  eventID    String    
  cw         Int
  teacherNote String?
  studentNote String?
  type       String?
  created_at DateTime @default(now())
}

model Events {
  id         String   @default(cuid()) @id @unique
  type       String    
  user       String    
  cw         Int
  created_at DateTime @default(now())
}

model StudyTimeData {
  id        String   @default(cuid()) @id @unique
  userID    String
  needs     String[] @default([])
  cw        Int
  year      Int
}

model User {
  id          String  @default(cuid()) @id @unique
  username    String  @unique
  displayname String 
  permission  Int     @default(0)
  password    String?  
  group       String[] @default([])
  needs       String[] @default([])
  competence  String[] @default([])
  pwdLastSet  DateTime @default(now())
  sessions    Session[]
}

model Session {
  id        String   @id @unique
  userID    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userID], onDelete: Cascade)
}